{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dato_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dato_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dato_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dato_r1.body);\n  }\n}\nexport class AppComponent {\n  constructor(_appService) {\n    this._appService = _appService;\n    this.title = 'TestMultimodal';\n    this.datos = [];\n  }\n  ngOnInit() {\n    this._appService.getDatos().subscribe(datos => {\n      this.datos = datos;\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AppService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 24,\n  vars: 1,\n  consts: [[1, \"pos-f-t\"], [\"id\", \"navbarToggleExternalContent\", 1, \"collapse\"], [1, \"bg-primary\", \"p-4\"], [1, \"text-white\"], [1, \"text-muted\"], [1, \"navbar\", \"navbar-dark\", \"bg-primary\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \"#navbarToggleExternalContent\", \"aria-controls\", \"navbarToggleExternalContent\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [1, \"container\"], [1, \"row\"], [1, \"col-12\"], [1, \"table\", \"table-hover\", \"table-bordered\", \"table-sm\", \"table-primary\"], [\"scope\", \"col\"], [\"scope\", \"col\", 1, \"align-middle\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h4\", 3);\n      i0.ɵɵtext(4, \"Collapsed content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"span\", 4);\n      i0.ɵɵtext(6, \"Toggleable via the navbar brand.\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"nav\", 5)(8, \"button\", 6);\n      i0.ɵɵelement(9, \"span\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"table\", 11)(14, \"thead\")(15, \"tr\")(16, \"th\", 12);\n      i0.ɵɵtext(17, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\", 13);\n      i0.ɵɵtext(19, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 12);\n      i0.ɵɵtext(21, \"Body\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"tbody\");\n      i0.ɵɵtemplate(23, AppComponent_tr_23_Template, 7, 3, \"tr\", 14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngForOf\", ctx.datos);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IA6BMA,0BAA+B;IACzBA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;;;;IAFlBA,eAAW;IAAXA,gCAAW;IACXA,eAAc;IAAdA,mCAAc;IACdA,eAAa;IAAbA,kCAAa;;;ACxBzB,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAJ/B,UAAK,GAAG,gBAAgB;IAEjB,UAAK,GAAQ,EAAE;EAEwB;EAE9CC,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MAC5C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;;AAXWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzBZ,8BAAqB;MAGQA,iCAAiB;MAAAA,iBAAK;MAC7CA,+BAAyB;MAAAA,gDAAgC;MAAAA,iBAAO;MAGpEA,8BAA2C;MAEvCA,0BAAyC;MAC3CA,iBAAS;MAIbA,+BAAuB;MAQEA,mBAAE;MAAAA,iBAAK;MAC1BA,+BAAqC;MAAAA,sBAAK;MAAAA,iBAAK;MAC/CA,+BAAgB;MAAAA,qBAAI;MAAAA,iBAAK;MAG3BA,8BAAO;MACLA,8DAKK;MACPA,iBAAQ;;;MANeA,gBAAQ;MAARA,mCAAQ","names":["i0","AppComponent","constructor","_appService","ngOnInit","getDatos","subscribe","datos","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Alienware 17\\Desktop\\TestMultimodal\\src\\app\\app.component.html","C:\\Users\\Alienware 17\\Desktop\\TestMultimodal\\src\\app\\app.component.ts"],"sourcesContent":["\n<div class=\"pos-f-t\">\n  <div class=\"collapse\" id=\"navbarToggleExternalContent\">\n    <div class=\"bg-primary p-4\">\n      <h4 class=\"text-white\">Collapsed content</h4>\n      <span class=\"text-muted\">Toggleable via the navbar brand.</span>\n    </div>\n  </div>\n  <nav class=\"navbar navbar-dark bg-primary\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  </nav>\n</div>\n\n<div class=\"container\">\n\n  <div class=\"row\">\n<div class=\"col-12\">\n\n  <table class=\"table table-hover table-bordered table-sm table-primary\">\n    <thead>\n      <tr>\n        <th scope=\"col\" >Id</th>\n      <th scope=\"col\" class=\"align-middle\">Title</th>\n      <th scope=\"col\">Body</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let dato of datos\">\n        <th>{{dato.id}}</th>\n        <th>{{dato.title}}</th>\n        <th>{{dato.body}}</th>\n        \n      </tr>\n    </tbody>\n  </table>\n\n</div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from \"./app.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'TestMultimodal';\n  \n  public datos: any = [];\n\n  constructor(private _appService: AppService) {}\n\n  ngOnInit(): void {\n    this._appService.getDatos().subscribe(datos => {\n      this.datos = datos;\n    })\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}